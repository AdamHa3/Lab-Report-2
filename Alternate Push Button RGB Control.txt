/*  
Alternate Push Button RGB Control Program

Program Goal: Lights up Red and Blue on the RGB LED when the push button (PB) is pressed, and Red and Green when it is not pressed.

Theme: Digital Input controlling Digital Output
*/

int pushButton = 2; // Connect the push button to pin 2
int red = 12;       // Connect Red color of RGB to pin 12
int green = 11;     // Connect Green color of RGB to pin 11
int blue = 10;      // Connect Blue color of RGB to pin 10

// setup() runs once when the board powers on or is reset
void setup() {
    Serial.begin(9600);              // Start Serial Monitor communication
    pinMode(pushButton, INPUT_PULLUP); // Set push button as INPUT_PULLUP using Arduino's internal resistor
    pinMode(12, OUTPUT);             // Set Red pin as output
    pinMode(11, OUTPUT);             // Set Green pin as output
    pinMode(10, OUTPUT);             // Set Blue pin as output
}

// loop() runs continuously in a never-ending cycle
void loop() {
    int buttonState = digitalRead(pushButton); // Read push button state

    // Print push button state and pin number to Serial Monitor
    Serial.print("buttonState = "); 
    Serial.print(buttonState); 
    Serial.print("\t"); 
    Serial.print("pushButton = "); 
    Serial.println(pushButton); 

    // Set RGB LED colors based on push button state
    digitalWrite(red, 1);          // Keep Red always on
    digitalWrite(green, buttonState);  // Green on when buttonState is 1
    digitalWrite(blue, !buttonState);  // Blue on when buttonState is 0

    delay(1); // Small delay between Serial Monitor prints
}
